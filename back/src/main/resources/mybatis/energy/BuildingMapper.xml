<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eim.project.energy.mapper.BuildingMapper">
    <resultMap id="BaseResultMap" type="com.eim.project.energy.entity.Building">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="company_id" jdbcType="INTEGER" property="companyId"/>
        <result column="company_name" jdbcType="NVARCHAR" property="companyName"/>
        <result column="plant_id" jdbcType="INTEGER" property="plantId"/>
        <result column="plant_name" jdbcType="NVARCHAR" property="plantName"/>
        <result column="building_code" jdbcType="NVARCHAR" property="buildingCode"/>
        <result column="building_name" jdbcType="NVARCHAR" property="buildingName"/>
        <result column="building_description" jdbcType="NVARCHAR" property="buildingDescription"/>
        <result column="create_by" jdbcType="NVARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="NVARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, plant_id, building_code, building_name, building_description, create_by,
    create_time, update_by, update_time
  </sql>
    <select id="selectBuildingList" resultMap="BaseResultMap">
    SELECT
	A.id, company_id, company_name, plant_id, plant_name, building_code, building_name, building_description, A.create_by, A.create_time, A.update_by, A.update_time
    FROM
	O_3Building A
	JOIN O_2Plant B ON A.plant_id = B.id
	JOIN O_1Company C ON B.company_id = C.id
    </select>
    <select id="selectByBuildingCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from O_3Building A
        where building_code = #{buildingCode,jdbcType=NVARCHAR}
        AND plant_id = #{plantId,jdbcType=INTEGER}
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
                A.id,
            plant_id,
            building_code,
            building_name,
            building_description,
            A.create_by,
            A.create_time,
            A.update_by,
            A.update_time,
            company_id
        from O_3Building A
        JOIN O_2Plant B ON A.plant_id = B.id
        where A.id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from O_3Building
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByIds" parameterType="java.lang.Integer">
        delete from O_3Building where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <insert id="insert" parameterType="com.eim.project.energy.entity.Building">
    insert into O_3Building (id, plant_id,
      building_code, building_name, building_description, 
      create_by, create_time, update_by, 
      update_time)
    values (#{id,jdbcType=INTEGER},  #{plantId,jdbcType=INTEGER},
      #{buildingCode,jdbcType=NVARCHAR}, #{buildingName,jdbcType=NVARCHAR}, #{buildingDescription,jdbcType=NVARCHAR}, 
      #{createBy,jdbcType=NVARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=NVARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.eim.project.energy.entity.Building">
        insert into O_3Building
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="plantId != null">
                plant_id,
            </if>
            <if test="buildingCode != null">
                building_code,
            </if>
            <if test="buildingName != null">
                building_name,
            </if>
            <if test="buildingDescription != null">
                building_description,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="plantId != null">
                #{plantId,jdbcType=INTEGER},
            </if>
            <if test="buildingCode != null">
                #{buildingCode,jdbcType=NVARCHAR},
            </if>
            <if test="buildingName != null">
                #{buildingName,jdbcType=NVARCHAR},
            </if>
            <if test="buildingDescription != null">
                #{buildingDescription,jdbcType=NVARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=NVARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=NVARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.eim.project.energy.entity.Building">
        update O_3Building
        <set>
            <if test="plantId != null">
                plant_id = #{plantId,jdbcType=INTEGER},
            </if>
            <if test="buildingCode != null">
                building_code = #{buildingCode,jdbcType=NVARCHAR},
            </if>
            <if test="buildingName != null">
                building_name = #{buildingName,jdbcType=NVARCHAR},
            </if>
            <if test="buildingDescription != null">
                building_description = #{buildingDescription,jdbcType=NVARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=NVARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=NVARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.eim.project.energy.entity.Building">
    update O_3Building
    set
      plant_id = #{plantId,jdbcType=INTEGER},
      building_code = #{buildingCode,jdbcType=NVARCHAR},
      building_name = #{buildingName,jdbcType=NVARCHAR},
      building_description = #{buildingDescription,jdbcType=NVARCHAR},
      create_by = #{createBy,jdbcType=NVARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=NVARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>