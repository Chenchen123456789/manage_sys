<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eim.project.energy.mapper.MeterMapper">
    <resultMap id="BaseResultMap" type="com.eim.project.energy.entity.Meter">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="company_id" jdbcType="INTEGER" property="companyId"/>
        <result column="plant_id" jdbcType="INTEGER" property="plantId"/>
        <result column="building_id" jdbcType="INTEGER" property="buildingId"/>
        <result column="device_id" jdbcType="INTEGER" property="deviceId"/>
        <result column="company_name" jdbcType="NVARCHAR" property="companyName"/>
        <result column="plant_name" jdbcType="NVARCHAR" property="plantName"/>
        <result column="building_name" jdbcType="NVARCHAR" property="buildingName"/>
        <result column="device_name" jdbcType="NVARCHAR" property="deviceName"/>
        <result column="meter_code" jdbcType="NVARCHAR" property="meterCode"/>
        <result column="meter_name" jdbcType="NVARCHAR" property="meterName"/>
        <result column="meter_company" jdbcType="NVARCHAR" property="meterCompany"/>
        <result column="meter_spec" jdbcType="NVARCHAR" property="meterSpec"/>
        <result column="meter_param" jdbcType="NVARCHAR" property="meterParam"/>
        <result column="location" jdbcType="NVARCHAR" property="location"/>
        <result column="meter_description" jdbcType="NVARCHAR" property="meterDescription"/>
        <result column="create_by" jdbcType="NVARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="NVARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, device_id, meter_code, meter_name, meter_company, meter_spec, meter_param, [location], 
    meter_description, create_by, create_time, update_by, update_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
   SELECT
      A.id,
      company_id,
      plant_id,
      building_id,
      device_id,
      meter_code,
      meter_name,
      meter_company,
      meter_spec,
      meter_param,
      A.[location],
      meter_description,
      A.create_by,
      A.create_time,
      A.update_by,
      A.update_time
    FROM
	    O_5Meter A
	JOIN O_4Device B ON A.device_id = B.id
	JOIN O_3Building C ON B.building_id = C.id
	JOIN O_2Plant D ON C.plant_id = D.id
    where A.id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectMeterList" resultMap="BaseResultMap">
        SELECT
        A.id,
        company_id,
        company_name,
        plant_id,
        plant_name,
        building_id,
        building_name,
        device_id,
        device_name,
        meter_name,
        meter_code,
        meter_company,
        meter_spec,
        meter_param,
        A.[location],
        meter_description,
        A.create_by,
        A.create_time,
        A.update_by,
        A.update_time
        FROM
        O_5Meter A
        JOIN O_4Device B ON A.device_id = B.id
        JOIN O_3Building C ON B.building_id = C.id
        JOIN O_2Plant D ON C.plant_id = D.id
        JOIN O_1Company E ON D.company_id = E.id
        <where>
            <if test="plantId != null">
                plant_id = #{plantId, jdbcType=INTEGER}
            </if>
            <if test="buildingId != null">
                and building_id = #{buildingId, jdbcType=INTEGER}
            </if>
            <if test="deviceId != null">
                and device_id = #{deviceId, jdbcType=INTEGER}
            </if>
        </where>
    </select>
    <select id="selectByMeterCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from O_5Meter
        where meter_code = #{meterdeviceCode,jdbcType=NVARCHAR}
        AND device_id = #{deviceId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByIds" parameterType="java.lang.Integer">
        delete from O_5Meter where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from O_5Meter
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.eim.project.energy.entity.Meter">
    insert into O_5Meter (id, device_id, meter_code, 
      meter_name, meter_company, meter_spec, 
      meter_param, [location], meter_description, 
      create_by, create_time, update_by, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{deviceId,jdbcType=INTEGER}, #{meterCode,jdbcType=NVARCHAR}, 
      #{meterName,jdbcType=NVARCHAR}, #{meterCompany,jdbcType=NVARCHAR}, #{meterSpec,jdbcType=NVARCHAR}, 
      #{meterParam,jdbcType=NVARCHAR}, #{location,jdbcType=NVARCHAR}, #{meterDescription,jdbcType=NVARCHAR}, 
      #{createBy,jdbcType=NVARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=NVARCHAR},
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.eim.project.energy.entity.Meter">
        insert into O_5Meter
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="deviceId != null">
                device_id,
            </if>
            <if test="meterCode != null">
                meter_code,
            </if>
            <if test="meterName != null">
                meter_name,
            </if>
            <if test="meterCompany != null">
                meter_company,
            </if>
            <if test="meterSpec != null">
                meter_spec,
            </if>
            <if test="meterParam != null">
                meter_param,
            </if>
            <if test="location != null">
                [location],
            </if>
            <if test="meterDescription != null">
                meter_description,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="deviceId != null">
                #{deviceId,jdbcType=INTEGER},
            </if>
            <if test="meterCode != null">
                #{meterCode,jdbcType=NVARCHAR},
            </if>
            <if test="meterName != null">
                #{meterName,jdbcType=NVARCHAR},
            </if>
            <if test="meterCompany != null">
                #{meterCompany,jdbcType=NVARCHAR},
            </if>
            <if test="meterSpec != null">
                #{meterSpec,jdbcType=NVARCHAR},
            </if>
            <if test="meterParam != null">
                #{meterParam,jdbcType=NVARCHAR},
            </if>
            <if test="location != null">
                #{location,jdbcType=NVARCHAR},
            </if>
            <if test="meterDescription != null">
                #{meterDescription,jdbcType=NVARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=NVARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=NVARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.eim.project.energy.entity.Meter">
        update O_5Meter
        <set>
            <if test="deviceId != null">
                device_id = #{deviceId,jdbcType=INTEGER},
            </if>
            <if test="meterCode != null">
                meter_code = #{meterCode,jdbcType=NVARCHAR},
            </if>
            <if test="meterName != null">
                meter_name = #{meterName,jdbcType=NVARCHAR},
            </if>
            <if test="meterCompany != null">
                meter_company = #{meterCompany,jdbcType=NVARCHAR},
            </if>
            <if test="meterSpec != null">
                meter_spec = #{meterSpec,jdbcType=NVARCHAR},
            </if>
            <if test="meterParam != null">
                meter_param = #{meterParam,jdbcType=NVARCHAR},
            </if>
            <if test="location != null">
                [location] = #{location,jdbcType=NVARCHAR},
            </if>
            <if test="meterDescription != null">
                meter_description = #{meterDescription,jdbcType=NVARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=NVARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=NVARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.eim.project.energy.entity.Meter">
    update O_5Meter
    set device_id = #{deviceId,jdbcType=INTEGER},
      meter_code = #{meterCode,jdbcType=NVARCHAR},
      meter_name = #{meterName,jdbcType=NVARCHAR},
      meter_company = #{meterCompany,jdbcType=NVARCHAR},
      meter_spec = #{meterSpec,jdbcType=NVARCHAR},
      meter_param = #{meterParam,jdbcType=NVARCHAR},
      [location] = #{location,jdbcType=NVARCHAR},
      meter_description = #{meterDescription,jdbcType=NVARCHAR},
      create_by = #{createBy,jdbcType=NVARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=NVARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>