<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eim.project.energy.mapper.ReportMapper">
    <select id="selectHistoryOfDosage" resultType="map" parameterType="map">
        SELECT
        distinct
        a.plant_name plantName,
        a.building_name buildingName,
        a.system_name systemName,
        a.device_name deviceName,
        a.meter_code meterCode,
        a.tag_name tagName,
        a.energy_type_name energyTypeName,
        b.TagValue tagValue,
        a.Description description,
        b.[datatime] dataTime,
        DATEADD( SECOND, 1, b.[datatime] ) showTime
        FROM
        dbo.consumption_group_info a,
        ${tableName} b
        <where>
            b.TagName = a.tag_name
            AND a.[disable] != 1
            <if test="beginTime !=null">
                AND dataTime &gt;= #{beginTime}
            </if>
            <if test="endTime !=null">
                AND dataTime &lt;= #{endTime}
            </if>
            <if test="energyTypeId !=null">
                AND a.energy_type_id = #{energyTypeId, jdbcType=INTEGER}
            </if>
            <if test="systemId !=null">
                AND a.system_id = #{systemId, jdbcType=INTEGER}
            </if>
            <if test="companyId !=null">
                AND a.company_id = #{companyId, jdbcType=INTEGER}
            </if>
            <if test="plantId !=null">
                AND a.plant_id = #{plantId, jdbcType=INTEGER}
            </if>
            <if test="buildingId !=null and buildingId.size>0">
                AND a.building_id in
                <foreach item="item" index="index" collection="buildingId"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="deviceId !=null and deviceId.size>0">
                AND a.device_id in
                <foreach item="item" index="index" collection="deviceId"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="meterId !=null and meterId.size>0">
                AND a.meter_id in
                <foreach item="item" index="index" collection="meterId"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="deviceType!=null">
                AND A.device_type = #{deviceType, jdbcType=INTEGER}
            </if>
            <if test="measureLevel!=null and measureLevel!=''">
                AND A.measure_level = #{measureLevel, jdbcType=INTEGER}
            </if>
        </where>
        order by plant_id asc, buildingName asc
    </select>

    <select id="selectDayDosageOfWater" resultType="map" parameterType="map">
        SELECT
        A.building_name buildingName,
        tag_name tagName,
        meter_param meterParam,
        A.plant_id,
        A.plant_name plantName,
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), #{queryTime}, 120 ) THEN
        TagValue ELSE 0
        END currentTimeValue,
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( day, - 1, #{queryTime} ),
        120 ) THEN
        TagValue ELSE 0
        END preTimeValue
        FROM
        consumption_group_info A
        LEFT JOIN T_DayData B ON A.tag_name = B.TagName
        AND (
        CONVERT ( VARCHAR ( 10 ), B.DataTime, 120 ) = CONVERT ( VARCHAR ( 10 ), #{ queryTime }, 120 )
        OR CONVERT ( VARCHAR ( 10 ), B.DataTime, 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( DAY, - 1, #{ queryTime } ),
        120 )
        )
        WHERE
        energy_type_name = '水'
        AND A.[disable] = 0
        <if test="plantId!=null">
            AND A.plant_id = #{plantId, jdbcType=INTEGER}
        </if>
        <if test="deviceType!=null">
            AND A.device_type = #{deviceType, jdbcType=INTEGER}
        </if>
        <if test="measureLevel!=null and measureLevel!=''">
            AND A.measure_level = #{measureLevel, jdbcType=INTEGER}
        </if>
        ORDER BY plant_id ASC , buildingName ASC, meter_code ASC
    </select>
    <select id="selectMonthDosageOfWater" resultType="map" parameterType="map">
        SELECT
        A.building_name buildingName,
        tag_name tagName,
        meter_param meterParam,
        A.plant_id,
        A.plant_name plantName,
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), #{queryTime}, 120 ) THEN
        TagValue ELSE 0
        END currentTimeValue,
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), DATEADD( MONTH, - 1, #{queryTime} ),
        120 ) THEN
        TagValue ELSE 0
        END preTimeValue
        FROM
        consumption_group_info A
        LEFT JOIN T_MonthData B ON A.tag_name = B.TagName
        AND (
        CONVERT ( VARCHAR ( 7 ), B.DataTime, 120 ) = CONVERT ( VARCHAR ( 7 ), #{ queryTime }, 120 )
        OR CONVERT ( VARCHAR ( 7 ), B.DataTime, 120 ) = CONVERT ( VARCHAR ( 7 ), DATEADD( MONTH, - 1, #{ queryTime } ),
        120 )
        )
        WHERE
        energy_type_name = '水'
        AND A.[disable] = 0
        <if test="plantId!=null">
            AND A.plant_id = #{plantId, jdbcType=INTEGER}
        </if>
        <if test="deviceType!=null">
            AND A.device_type = #{deviceType, jdbcType=INTEGER}
        </if>
        <if test="measureLevel!=null and measureLevel!=''">
            AND A.measure_level = #{measureLevel, jdbcType=INTEGER}
        </if>
        ORDER BY plant_id ASC , buildingName ASC, meter_code ASC
    </select>
    <select id="selectQuarterDosageOfWater" resultType="map" parameterType="map">
        SELECT
        A.building_name buildingName,
        tag_name tagName,
        meter_param meterParam,
        A.plant_id,
        A.plant_name plantName,
        CASE
        WHEN YEAR(B.DataTime) = #{queryTimeYear} and [quarter] = #{queryTimeQuarter} THEN
        TagValue ELSE 0
        END currentTimeValue,
        CASE
        WHEN YEAR(B.DataTime) = #{preQueryTimeYear} and [quarter] = #{preQueryTimeQuarter} THEN
        TagValue ELSE 0
        END preTimeValue
        FROM
        consumption_group_info A
        LEFT JOIN T_QuarterData B ON A.tag_name = B.TagName
        AND (
        YEAR(B.DataTime) = #{queryTimeYear} and [quarter] = #{queryTimeQuarter}
        OR YEAR(B.DataTime) = #{preQueryTimeYear} and [quarter] = #{preQueryTimeQuarter}
        )
        WHERE
        energy_type_name = '水'
        AND A.[disable] = 0
        <if test="plantId!=null">
            AND A.plant_id = #{plantId, jdbcType=INTEGER}
        </if>
        <if test="deviceType!=null">
            AND A.device_type = #{deviceType, jdbcType=INTEGER}
        </if>
        <if test="measureLevel!=null and measureLevel!=''">
            AND A.measure_level = #{measureLevel, jdbcType=INTEGER}
        </if>
        ORDER BY
        plant_id ASC , buildingName ASC, meter_code ASC
    </select>
    <select id="selectYearDosageOfWater" resultType="map" parameterType="map">
        SELECT
        A.building_name buildingName,
        tag_name tagName,
        meter_param meterParam,
        A.plant_id,
        A.plant_name plantName,
        CASE
        WHEN year(B.DataTime) = year (#{queryTime}) THEN
        TagValue ELSE 0
        END currentTimeValue,
        CASE
        WHEN year(B.DataTime) = year ( dateadd(year, - 1, #{queryTime} )) THEN
        TagValue ELSE 0
        END preTimeValue
        FROM
        consumption_group_info A
        LEFT JOIN T_YearData B ON A.tag_name = B.TagName
        and (year(B.DataTime) = year (#{queryTime}) or year(B.DataTime) = year ( dateadd(year, - 1, #{queryTime} )) )
        WHERE
        energy_type_name = '水'
        AND A.[disable] = 0
        <if test="plantId!=null">
            AND A.plant_id = #{plantId, jdbcType=INTEGER}
        </if>
        <if test="deviceType!=null">
            AND A.device_type = #{deviceType, jdbcType=INTEGER}
        </if>
        <if test="measureLevel!=null and measureLevel!=''">
            AND A.measure_level = #{measureLevel, jdbcType=INTEGER}
        </if>
        ORDER BY
        plant_id ASC , buildingName ASC, meter_code ASC
    </select>

    <select id="selectDayDosageOfElectricity" parameterType="map" resultType="map">
        SELECT
        A.building_name buildingName,
        tag_name tagName,
        meter_param meterParam,
        A.plant_id,
        A.plant_name plantName,
        device_name deviceName,
        meter_code meterCode,
        meter_location meterLocation,
        meter_spec meterSpec,
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), #{queryTime}, 120 ) THEN
        TagValue ELSE 0
        END currentTimeValue,
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( day, - 1, #{queryTime} ),
        120 ) THEN
        TagValue ELSE 0
        END preTimeValue,
        (
        SELECT
        ISNULL( SUM ( FValue ), 0.0 )
        FROM
        T_DayDataJFPG TD
        WHERE
        TD.TagName = A.tag_name
        AND CONVERT ( VARCHAR ( 10 ), TD.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), #{queryTime}, 120 )
        ) fValue,
        (
        SELECT
        ISNULL( SUM ( PValue ), 0.0 )
        FROM
        T_DayDataJFPG TD
        WHERE
        TD.TagName = A.tag_name
        AND CONVERT ( VARCHAR ( 10 ), TD.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), #{queryTime}, 120 )
        ) pValue,
        (
        SELECT
        ISNULL( SUM ( GValue ), 0.0 )
        FROM
        T_DayDataJFPG TD
        WHERE
        TD.TagName = A.tag_name
        AND CONVERT ( VARCHAR ( 10 ), TD.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), #{queryTime}, 120 )
        ) gValue
        FROM
        consumption_group_info A
        LEFT JOIN T_DayData B ON A.tag_name = B.TagName
        AND (
        CONVERT ( VARCHAR ( 10 ), B.DataTime, 120 ) = CONVERT ( VARCHAR ( 10 ), #{ queryTime }, 120 )
        OR CONVERT ( VARCHAR ( 10 ), B.DataTime, 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( DAY, - 1, #{ queryTime } ),
        120 )
        )
        WHERE
        energy_type_name = '电'
        AND A.[disable] = 0
        <if test="plantId !=null">
            AND A.plant_id = #{plantId, jdbcType=INTEGER}
        </if>
        <if test="buildingId !=null and buildingId.size>0">
            AND A.building_id in
            <foreach item="item" index="index" collection="buildingId"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="deviceId !=null and deviceId.size>0">
            AND A.device_id in
            <foreach item="item" index="index" collection="deviceId"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="meterId !=null and meterId.size>0">
            AND A.meter_id in
            <foreach item="item" index="index" collection="meterId"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="deviceType!=null">
            AND A.device_type = #{deviceType, jdbcType=INTEGER}
        </if>
        <if test="measureLevel!=null and measureLevel!=''">
            AND A.measure_level = #{measureLevel, jdbcType=INTEGER}
        </if>
        ORDER BY
        plant_id ASC , buildingName ASC, meter_code ASC
    </select>
    <select id="selectMonthDosageOfElectricity" parameterType="map" resultType="map">
        SELECT
        A.building_name buildingName,
        tag_name tagName,
        meter_param meterParam,
        A.plant_id,
        A.plant_name plantName,
        device_name deviceName,
        meter_code meterCode,
        meter_location meterLocation,
        meter_spec meterSpec,
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), #{queryTime}, 120 ) THEN
        TagValue ELSE 0
        END currentTimeValue,
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), DATEADD( MONTH, - 1, #{queryTime} ),
        120 ) THEN
        TagValue ELSE 0
        END preTimeValue,
        (
        SELECT
        ISNULL( SUM ( FValue ), 0.0 )
        FROM
        T_DayDataJFPG TD
        WHERE
        TD.TagName = A.tag_name
        AND CONVERT ( VARCHAR ( 7 ), TD.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), #{queryTime}, 120 )
        ) fValue,
        (
        SELECT
        ISNULL( SUM ( PValue ), 0.0 )
        FROM
        T_DayDataJFPG TD
        WHERE
        TD.TagName = A.tag_name
        AND CONVERT ( VARCHAR ( 7 ), TD.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), #{queryTime}, 120 )
        ) pValue,
        (
        SELECT
        ISNULL( SUM ( GValue ), 0.0 )
        FROM
        T_DayDataJFPG TD
        WHERE
        TD.TagName = A.tag_name
        AND CONVERT ( VARCHAR ( 7 ), TD.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), #{queryTime}, 120 )
        ) gValue
        FROM
        consumption_group_info A
        LEFT JOIN T_MonthData B ON A.tag_name = B.TagName
        AND (
        CONVERT ( VARCHAR ( 7 ), B.DataTime, 120 ) = CONVERT ( VARCHAR ( 7 ), #{ queryTime }, 120 )
        OR CONVERT ( VARCHAR ( 7 ), B.DataTime, 120 ) = CONVERT ( VARCHAR ( 7 ), DATEADD( MONTH, - 1, #{ queryTime } ),
        120 )
        )
        WHERE
        energy_type_name = '电'
        AND A.[disable] = 0
        <if test="plantId !=null">
            AND A.plant_id = #{plantId, jdbcType=INTEGER}
        </if>
        <if test="buildingId !=null and buildingId.size>0">
            AND A.building_id in
            <foreach item="item" index="index" collection="buildingId"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="deviceId !=null and deviceId.size>0">
            AND A.device_id in
            <foreach item="item" index="index" collection="deviceId"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="meterId !=null and meterId.size>0">
            AND A.meter_id in
            <foreach item="item" index="index" collection="meterId"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="deviceType!=null">
            AND A.device_type = #{deviceType, jdbcType=INTEGER}
        </if>
        <if test="measureLevel!=null and measureLevel!=''">
            AND A.measure_level = #{measureLevel, jdbcType=INTEGER}
        </if>
        ORDER BY
        plant_id ASC , buildingName ASC, meter_code ASC
    </select>
    <select id="selectQuarterDosageOfElectricity" parameterType="map" resultType="map">
        SELECT
        A.building_name buildingName,
        tag_name tagName,
        meter_param meterParam,
        A.plant_id,
        A.plant_name plantName,
        device_name deviceName,
        meter_code meterCode,
        meter_location meterLocation,
        meter_spec meterSpec,
        CASE
        WHEN YEAR(B.DataTime) = #{queryTimeYear} and [quarter] = #{queryTimeQuarter} THEN
        TagValue ELSE 0
        END currentTimeValue,
        CASE
        WHEN YEAR(B.DataTime) = #{preQueryTimeYear} and [quarter] = #{preQueryTimeQuarter} THEN
        TagValue ELSE 0
        END preTimeValue,
        (
        SELECT
        ISNULL( SUM ( FValue ), 0.0 )
        FROM
        T_DayDataJFPG TD
        WHERE
        TD.TagName = A.tag_name
        AND year (TD.DataTime ) = #{queryTimeYear} and DATENAME(quarter, TD.DataTime) = #{queryTimeQuarter}
        ) fValue,
        (
        SELECT
        ISNULL( SUM ( PValue ), 0.0 )
        FROM
        T_DayDataJFPG TD
        WHERE
        TD.TagName = A.tag_name
        AND year (TD.DataTime ) = #{queryTimeYear} and DATENAME(quarter, TD.DataTime) = #{queryTimeQuarter}
        ) pValue,
        (
        SELECT
        ISNULL( SUM ( GValue ), 0.0 )
        FROM
        T_DayDataJFPG TD
        WHERE
        TD.TagName = A.tag_name
        AND year (TD.DataTime ) = #{queryTimeYear} and DATENAME(quarter, TD.DataTime) = #{queryTimeQuarter}
        ) gValue
        FROM
        consumption_group_info A
        LEFT JOIN T_QuarterData B ON A.tag_name = B.TagName
        AND (
        YEAR(B.DataTime) = #{queryTimeYear} and [quarter] = #{queryTimeQuarter}
        OR YEAR(B.DataTime) = #{preQueryTimeYear} and [quarter] = #{preQueryTimeQuarter}
        )
        WHERE
        energy_type_name = '电'
        AND A.[disable] = 0
        <if test="plantId !=null">
            AND A.plant_id = #{plantId, jdbcType=INTEGER}
        </if>
        <if test="buildingId !=null and buildingId.size>0">
            AND A.building_id in
            <foreach item="item" index="index" collection="buildingId"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="deviceId !=null and deviceId.size>0">
            AND A.device_id in
            <foreach item="item" index="index" collection="deviceId"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="meterId !=null and meterId.size>0">
            AND A.meter_id in
            <foreach item="item" index="index" collection="meterId"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="deviceType!=null">
            AND A.device_type = #{deviceType, jdbcType=INTEGER}
        </if>
        <if test="measureLevel!=null and measureLevel!=''">
            AND A.measure_level = #{measureLevel, jdbcType=INTEGER}
        </if>
        ORDER BY
        plant_id ASC , buildingName ASC, meter_code ASC
    </select>
    <select id="selectYearDosageOfElectricity" parameterType="map" resultType="map">
        SELECT
        A.building_name buildingName,
        tag_name tagName,
        meter_param meterParam,
        A.plant_id,
        A.plant_name plantName,
        device_name deviceName,
        meter_code meterCode,
        meter_location meterLocation,
        meter_spec meterSpec,
        CASE
        WHEN year( B.DataTime ) = year( #{queryTime} ) THEN
        TagValue ELSE 0
        END currentTimeValue,
        CASE
        WHEN year( B.DataTime ) = year( DATEADD( year, - 1, #{queryTime} ) ) THEN
        TagValue ELSE 0
        END preTimeValue,
        (
        SELECT
        ISNULL( SUM ( FValue ), 0.0 )
        FROM
        T_DayDataJFPG TD
        WHERE
        TD.TagName = A.tag_name
        AND year( B.DataTime ) = year( #{queryTime} )
        ) fValue,
        (
        SELECT
        ISNULL( SUM ( PValue ), 0.0 )
        FROM
        T_DayDataJFPG TD
        WHERE
        TD.TagName = A.tag_name
        AND year( B.DataTime ) = year( #{queryTime} )
        ) pValue,
        (
        SELECT
        ISNULL( SUM ( GValue ), 0.0 )
        FROM
        T_DayDataJFPG TD
        WHERE
        TD.TagName = A.tag_name
        AND year( B.DataTime ) = year( #{queryTime} )
        ) gValue
        FROM
        consumption_group_info A
        LEFT JOIN T_YearData B ON A.tag_name = B.TagName
        AND (
        year( B.DataTime ) = year( #{queryTime} )
        OR year( B.DataTime ) = year( DATEADD( year, - 1, #{queryTime} ) )
        )
        WHERE
        energy_type_name = '电'
        AND A.[disable] = 0
        <if test="plantId !=null">
            AND A.plant_id = #{plantId, jdbcType=INTEGER}
        </if>
        <if test="buildingId !=null and buildingId.size>0">
            AND A.building_id in
            <foreach item="item" index="index" collection="buildingId"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="deviceId !=null and deviceId.size>0">
            AND A.device_id in
            <foreach item="item" index="index" collection="deviceId"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="meterId !=null and meterId.size>0">
            AND A.meter_id in
            <foreach item="item" index="index" collection="meterId"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="deviceType!=null">
            AND A.device_type = #{deviceType, jdbcType=INTEGER}
        </if>
        <if test="measureLevel!=null and measureLevel!=''">
            AND A.measure_level = #{measureLevel, jdbcType=INTEGER}
        </if>
        ORDER BY
        plant_id ASC , buildingName ASC, meter_code ASC
    </select>

    <select id="selectDaySettlement" parameterType="map" resultType="map">
        SELECT
        ( SELECT DISTINCT building_name FROM consumption_group_info C WHERE C.building_id = A.building_id )
        buildingName,
        ( SELECT DISTINCT plant_name FROM consumption_group_info C WHERE C.building_id = A.building_id ) plantName,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), #{queryTime}, 120 )
        AND energy_type_name = '电' THEN
        TagValue ELSE 0.0
        END
        ) currentElectricitySumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( day, - 1, #{queryTime} ),
        120 )
        AND energy_type_name = '电' THEN
        TagValue ELSE 0.0
        END
        ) preElectricitySumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), #{queryTime}, 120 )
        AND energy_type_name = '水' THEN
        TagValue ELSE 0.0
        END
        ) currentWaterSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( day, - 1, #{queryTime} ),
        120 )
        AND energy_type_name = '水' THEN
        TagValue ELSE 0.0
        END
        ) preWaterSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), #{queryTime}, 120 )
        AND energy_type_name = '空气' THEN
        TagValue ELSE 0.0
        END
        ) currentAirSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( day, - 1, #{queryTime} ),
        120 )
        AND energy_type_name = '空气' THEN
        TagValue ELSE 0.0
        END
        ) preAirSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), #{queryTime}, 120 )
        AND energy_type_name = '蒸汽' THEN
        TagValue ELSE 0.0
        END
        ) currentSteamSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( day, - 1, #{queryTime} ),
        120 )
        AND energy_type_name = '蒸汽' THEN
        TagValue ELSE 0.0
        END
        ) preSteamSumValue
        FROM
        consumption_group_info A
        LEFT JOIN T_DayData B ON A.tag_name = B.TagName
        and (
        CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( day, - 1, #{queryTime} ),
        120 )
        or CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), #{queryTime}, 120 )
        )
        WHERE
        A.[disable] = 0
        <if test="plantId!=null">
            AND plant_id = #{plantId, jdbcType=INTEGER}
        </if>
        <if test="deviceType!=null">
            AND A.device_type = #{deviceType, jdbcType=INTEGER}
        </if>
        <if test="measureLevel!=null and measureLevel!=''">
            AND A.measure_level = #{measureLevel, jdbcType=INTEGER}
        </if>
        GROUP BY building_id
    </select>
    <select id="selectMonthSettlement" parameterType="map" resultType="map">
        SELECT
        ( SELECT DISTINCT building_name FROM consumption_group_info C WHERE C.building_id = A.building_id )
        buildingName,
        ( SELECT DISTINCT plant_name FROM consumption_group_info C WHERE C.building_id = A.building_id ) plantName,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), #{queryTime}, 120 )
        AND energy_type_name = '电' THEN
        TagValue ELSE 0.0
        END
        ) currentElectricitySumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), DATEADD( MONTH, - 1, #{queryTime} ),
        120 )
        AND energy_type_name = '电' THEN
        TagValue ELSE 0.0
        END
        ) preElectricitySumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), #{queryTime}, 120 )
        AND energy_type_name = '水' THEN
        TagValue ELSE 0.0
        END
        ) currentWaterSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), DATEADD( MONTH, - 1, #{queryTime} ),
        120 )
        AND energy_type_name = '水' THEN
        TagValue ELSE 0.0
        END
        ) preWaterSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), #{queryTime}, 120 )
        AND energy_type_name = '空气' THEN
        TagValue ELSE 0.0
        END
        ) currentAirSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), DATEADD( MONTH, - 1, #{queryTime} ),
        120 )
        AND energy_type_name = '空气' THEN
        TagValue ELSE 0.0
        END
        ) preAirSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), #{queryTime}, 120 )
        AND energy_type_name = '蒸汽' THEN
        TagValue ELSE 0.0
        END
        ) currentSteamSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), DATEADD( MONTH, - 1, #{queryTime} ),
        120 )
        AND energy_type_name = '蒸汽' THEN
        TagValue ELSE 0.0
        END
        ) preSteamSumValue
        FROM
        consumption_group_info A
        LEFT JOIN T_MonthData B ON A.tag_name = B.TagName
        and ( CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), DATEADD( MONTH, - 1, #{queryTime}
        ),
        120 ) or CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), #{queryTime}, 120 )
        )
        WHERE
        A.[disable] = 0
        <if test="plantId!=null">
            AND plant_id = #{plantId, jdbcType=INTEGER}
        </if>
        <if test="deviceType!=null">
            AND A.device_type = #{deviceType, jdbcType=INTEGER}
        </if>
        <if test="measureLevel!=null and measureLevel!=''">
            AND A.measure_level = #{measureLevel, jdbcType=INTEGER}
        </if>
        GROUP BY building_id
    </select>
    <select id="selectQuarterSettlement" parameterType="map" resultType="map">
        SELECT
        ( SELECT DISTINCT building_name FROM consumption_group_info C WHERE C.building_id = A.building_id )
        buildingName,
        ( SELECT DISTINCT plant_name FROM consumption_group_info C WHERE C.building_id = A.building_id ) plantName,
        SUM (
        CASE
        WHEN YEAR(B.DataTime) = #{queryTimeYear} and [quarter] = #{queryTimeQuarter}
        AND energy_type_name = '电' THEN
        TagValue ELSE 0.0
        END
        ) currentElectricitySumValue,
        SUM (
        CASE
        WHEN YEAR(B.DataTime) = #{preQueryTimeYear} and [quarter] = #{preQueryTimeQuarter}
        AND energy_type_name = '电' THEN
        TagValue ELSE 0.0
        END
        ) preElectricitySumValue,
        SUM (
        CASE
        WHEN YEAR(B.DataTime) = #{queryTimeYear} and [quarter] = #{queryTimeQuarter}
        AND energy_type_name = '水' THEN
        TagValue ELSE 0.0
        END
        ) currentWaterSumValue,
        SUM (
        CASE
        WHEN YEAR(B.DataTime) = #{preQueryTimeYear} and [quarter] = #{preQueryTimeQuarter}
        AND energy_type_name = '水' THEN
        TagValue ELSE 0.0
        END
        ) preWaterSumValue,
        SUM (
        CASE
        WHEN YEAR(B.DataTime) = #{queryTimeYear} and [quarter] = #{queryTimeQuarter}
        AND energy_type_name = '空气' THEN
        TagValue ELSE 0.0
        END
        ) currentAirSumValue,
        SUM (
        CASE
        WHEN YEAR(B.DataTime) = #{preQueryTimeYear} and [quarter] = #{preQueryTimeQuarter}
        AND energy_type_name = '空气' THEN
        TagValue ELSE 0.0
        END
        ) preAirSumValue,
        SUM (
        CASE
        WHEN YEAR(B.DataTime) = #{queryTimeYear} and [quarter] = #{queryTimeQuarter}
        AND energy_type_name = '蒸汽' THEN
        TagValue ELSE 0.0
        END
        ) currentSteamSumValue,
        SUM (
        CASE
        WHEN YEAR(B.DataTime) = #{preQueryTimeYear} and [quarter] = #{preQueryTimeQuarter}
        AND energy_type_name = '蒸汽' THEN
        TagValue ELSE 0.0
        END
        ) preSteamSumValue
        FROM
        consumption_group_info A
        LEFT JOIN T_QuarterData B ON A.tag_name = B.TagName
        and (
        YEAR(B.DataTime) = #{preQueryTimeYear} and [quarter] = #{preQueryTimeQuarter} or
        YEAR(B.DataTime) = #{queryTimeYear} and [quarter] = #{queryTimeQuarter}
        )
        WHERE
        A.[disable] = 0
        <if test="plantId!=null">
            AND plant_id = #{plantId, jdbcType=INTEGER}
        </if>
        <if test="deviceType!=null">
            AND A.device_type = #{deviceType, jdbcType=INTEGER}
        </if>
        <if test="measureLevel!=null and measureLevel!=''">
            AND A.measure_level = #{measureLevel, jdbcType=INTEGER}
        </if>
        GROUP BY building_id
    </select>
    <select id="selectYearSettlement" parameterType="map" resultType="map">
        SELECT
        ( SELECT DISTINCT building_name FROM consumption_group_info C WHERE C.building_id = A.building_id )
        buildingName,
        ( SELECT DISTINCT plant_name FROM consumption_group_info C WHERE C.building_id = A.building_id ) plantName,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), #{queryTime}, 120 )
        AND energy_type_name = '电' THEN
        TagValue ELSE 0.0
        END
        ) currentElectricitySumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), DATEADD( year , - 1, #{queryTime} ),
        120 )
        AND energy_type_name = '电' THEN
        TagValue ELSE 0.0
        END
        ) preElectricitySumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), #{queryTime}, 120 )
        AND energy_type_name = '水' THEN
        TagValue ELSE 0.0
        END
        ) currentWaterSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), DATEADD( year , - 1, #{queryTime} ),
        120 )
        AND energy_type_name = '水' THEN
        TagValue ELSE 0.0
        END
        ) preWaterSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), #{queryTime}, 120 )
        AND energy_type_name = '空气' THEN
        TagValue ELSE 0.0
        END
        ) currentAirSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), DATEADD( year , - 1, #{queryTime} ),
        120 )
        AND energy_type_name = '空气' THEN
        TagValue ELSE 0.0
        END
        ) preAirSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), #{queryTime}, 120 )
        AND energy_type_name = '蒸汽' THEN
        TagValue ELSE 0.0
        END
        ) currentSteamSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), DATEADD( year , - 1, #{queryTime} ),
        120 )
        AND energy_type_name = '蒸汽' THEN
        TagValue ELSE 0.0
        END
        ) preSteamSumValue
        FROM
        consumption_group_info A
        LEFT JOIN T_YearData B ON A.tag_name = B.TagName
        and (
        CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), #{queryTime}, 120 )
        or CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), DATEADD( year , - 1, #{queryTime}
        ),120 )
        )
        WHERE
        A.[disable] = 0
        <if test="plantId!=null">
            AND plant_id = #{plantId, jdbcType=INTEGER}
        </if>
        <if test="deviceType!=null">
            AND A.device_type = #{deviceType, jdbcType=INTEGER}
        </if>
        <if test="measureLevel!=null and measureLevel!=''">
            AND A.measure_level = #{measureLevel, jdbcType=INTEGER}
        </if>
        GROUP BY building_id
    </select>

    <select id="selectClassList" resultType="map">
        SELECT
            class_id classId,
            class_name className,
            class_description classDescription
        FROM
            S_Class
    </select>
    <select id="selectEnergyTypeList" resultType="map">
        SELECT
            energy_type_id energyTypeId,
            energy_type_name energyTypeName,
            energy_type_description energyTypeDescription
        FROM
            S_EnergyType
    </select>
    <select id="selectSignalTypeList" resultType="map">
        SELECT
            signal_type_id	 signalTypeId,
            signal_type_name signalTypeName,
            signal_type_description signalTypeDescription
        FROM
            S_SignalType
    </select>
    <select id="selectSystemList" resultType="map">
        SELECT
            system_id systemId,
            system_name systemName,
            system_description systemDescription
        FROM
            S_System
    </select>

    <select id="selectBuildingYearDosage" parameterType="map" resultType="map">
        SELECT
        building_id,
        buildingName,
        ( currentWaterSumValue - preWaterSumValue ) currentWaterSumValue,
        ( currentElectricitySumValue - preElectricitySumValue ) currentElectricitySumValue,
        ( currentAirSumValue - preAirSumValue ) currentAirSumValue,
        ( currentSteamSumValue - preSteamSumValue ) currentSteamSumValue
        FROM
        (
        SELECT
        ( SELECT DISTINCT building_name FROM consumption_group_info C WHERE C.building_id = A.building_id )
        buildingName,
        ( SELECT DISTINCT plant_name FROM consumption_group_info C WHERE C.building_id = A.building_id ) plantName,
        building_id,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), getdate(), 120 )
        AND energy_type_name = '电' THEN
        TagValue ELSE 0.0
        END
        ) currentElectricitySumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( day, - 1, getdate() ),
        120 )
        AND energy_type_name = '电' THEN
        TagValue ELSE 0.0
        END
        ) preElectricitySumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), getdate(), 120 )
        AND energy_type_name = '水' THEN
        TagValue ELSE 0.0
        END
        ) currentWaterSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( day, - 1, getdate() ),
        120 )
        AND energy_type_name = '水' THEN
        TagValue ELSE 0.0
        END
        ) preWaterSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), getdate(), 120 )
        AND energy_type_name = '空气' THEN
        TagValue ELSE 0.0
        END
        ) currentAirSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( day, - 1, getdate() ),
        120 )
        AND energy_type_name = '空气' THEN
        TagValue ELSE 0.0
        END
        ) preAirSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), getdate(), 120 )
        AND energy_type_name = '蒸汽' THEN
        TagValue ELSE 0.0
        END
        ) currentSteamSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( day, - 1, getdate() ),
        120 )
        AND energy_type_name = '蒸汽' THEN
        TagValue ELSE 0.0
        END
        ) preSteamSumValue
        FROM
        consumption_group_info A
        LEFT JOIN T_YearData B ON A.tag_name = B.TagName
        and (
        CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( day, - 1, getdate() ),
        120 )
        or CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), getdate(), 120 )
        )
        WHERE
        A.[disable] = 0
        <if test="buildingId!=null">
            AND building_id = #{buildingId, jdbcType=INTEGER}
        </if>
        GROUP BY building_id) T
    </select>
    <select id="selectBuildingMonthDosage" parameterType="map" resultType="map">
        SELECT
        building_id,
        buildingName,
        ( currentWaterSumValue - preWaterSumValue ) currentWaterSumValue,
        ( currentElectricitySumValue - preElectricitySumValue ) currentElectricitySumValue,
        ( currentAirSumValue - preAirSumValue ) currentAirSumValue,
        ( currentSteamSumValue - preSteamSumValue ) currentSteamSumValue,
        ( preWaterSumValue - twoPreWaterSumValue ) preWaterSumValue,
        ( preElectricitySumValue - twoPreElectricitySumValue ) preElectricitySumValue,
        ( preAirSumValue - twoPreAirSumValue ) preAirSumValue,
        ( preSteamSumValue - twoPreSteamSumValue ) preSteamSumValue
        FROM
        (
        SELECT
        ( SELECT DISTINCT building_name FROM consumption_group_info C WHERE C.building_id = A.building_id )
        buildingName,
        ( SELECT DISTINCT plant_name FROM consumption_group_info C WHERE C.building_id = A.building_id ) plantName,
        building_id,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), getdate( ), 120 )
        AND energy_type_name = '电' THEN
        TagValue ELSE 0.0
        END
        ) currentElectricitySumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), DATEADD( MONTH, - 1, getdate( ) ),
        120 )
        AND energy_type_name = '电' THEN
        TagValue ELSE 0.0
        END
        ) preElectricitySumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), DATEADD( MONTH, - 2, getdate( ) ),
        120 )
        AND energy_type_name = '电' THEN
        TagValue ELSE 0.0
        END
        ) twoPreElectricitySumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), getdate( ), 120 )
        AND energy_type_name = '水' THEN
        TagValue ELSE 0.0
        END
        ) currentWaterSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), DATEADD( MONTH, - 1, getdate( ) ),
        120 )
        AND energy_type_name = '水' THEN
        TagValue ELSE 0.0
        END
        ) preWaterSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), DATEADD( MONTH, - 2, getdate( ) ),
        120 )
        AND energy_type_name = '水' THEN
        TagValue ELSE 0.0
        END
        ) twoPreWaterSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), getdate( ), 120 )
        AND energy_type_name = '空气' THEN
        TagValue ELSE 0.0
        END
        ) currentAirSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), DATEADD( MONTH, - 1, getdate( ) ),
        120 )
        AND energy_type_name = '空气' THEN
        TagValue ELSE 0.0
        END
        ) preAirSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), DATEADD( MONTH, - 2, getdate( ) ),
        120 )
        AND energy_type_name = '空气' THEN
        TagValue ELSE 0.0
        END
        ) twoPreAirSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), getdate( ), 120 )
        AND energy_type_name = '蒸汽' THEN
        TagValue ELSE 0.0
        END
        ) currentSteamSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), DATEADD( MONTH, - 1, getdate( ) ),
        120 )
        AND energy_type_name = '蒸汽' THEN
        TagValue ELSE 0.0
        END
        ) preSteamSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), DATEADD( MONTH, - 2, getdate( ) ),
        120 )
        AND energy_type_name = '蒸汽' THEN
        TagValue ELSE 0.0
        END
        ) twoPreSteamSumValue
        FROM
        consumption_group_info A
        LEFT JOIN T_MonthData B ON A.tag_name = B.TagName
        AND (
        CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), DATEADD( MONTH, - 1, getdate( ) ), 120 )
        OR CONVERT ( VARCHAR ( 7 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 7 ), getdate( ), 120 )
        )
        WHERE
        A.[disable] = 0
        <if test="buildingId!=null">
            AND building_id = #{buildingId, jdbcType=INTEGER}
        </if>
        GROUP BY
        building_id
        ) T
    </select>
    <select id="selectBuildingDayDosage" parameterType="map" resultType="map">
        SELECT
        building_id,
        buildingName,
        ( currentWaterSumValue - preWaterSumValue ) currentWaterSumValue,
        ( currentElectricitySumValue - preElectricitySumValue ) currentElectricitySumValue,
        ( currentAirSumValue - preAirSumValue ) currentAirSumValue,
        ( currentSteamSumValue - preSteamSumValue ) currentSteamSumValue
        FROM
        (
        SELECT
        ( SELECT DISTINCT building_name FROM consumption_group_info C WHERE C.building_id = A.building_id )
        buildingName,
        ( SELECT DISTINCT plant_name FROM consumption_group_info C WHERE C.building_id = A.building_id ) plantName,
        building_id,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), getdate( ), 120 )
        AND energy_type_name = '电' THEN
        TagValue ELSE 0.0
        END
        ) currentElectricitySumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( DAY, - 1, getdate( ) ),
        120 )
        AND energy_type_name = '电' THEN
        TagValue ELSE 0.0
        END
        ) preElectricitySumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), getdate( ), 120 )
        AND energy_type_name = '水' THEN
        TagValue ELSE 0.0
        END
        ) currentWaterSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( DAY, - 1, getdate( ) ),
        120 )
        AND energy_type_name = '水' THEN
        TagValue ELSE 0.0
        END
        ) preWaterSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), getdate( ), 120 )
        AND energy_type_name = '空气' THEN
        TagValue ELSE 0.0
        END
        ) currentAirSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( DAY, - 1, getdate( ) ),
        120 )
        AND energy_type_name = '空气' THEN
        TagValue ELSE 0.0
        END
        ) preAirSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), getdate( ), 120 )
        AND energy_type_name = '蒸汽' THEN
        TagValue ELSE 0.0
        END
        ) currentSteamSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( DAY, - 1, getdate( ) ),
        120 )
        AND energy_type_name = '蒸汽' THEN
        TagValue ELSE 0.0
        END
        ) preSteamSumValue
        FROM
        consumption_group_info A
        LEFT JOIN T_DayData B ON A.tag_name = B.TagName
        AND (
        CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), DATEADD( DAY, - 1, getdate( ) ), 120 )
        OR CONVERT ( VARCHAR ( 10 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 10 ), getdate( ), 120 )
        )
        WHERE
        A.[disable] = 0
        <if test="buildingId!=null">
            AND building_id = #{buildingId, jdbcType=INTEGER}
        </if>
        GROUP BY
        building_id
        ) T
    </select>

    <select id="selectBuildingMainMPValue" resultType="map" parameterType="java.lang.Integer">
        SELECT
        top 8
        building_id buildingId,
        building_name buildingName,
        tag_name tagName,
        CAST (TagValue AS DECIMAL (20,2)) tagValue,
        A.[description]
        FROM
        Variable_Info A,
        RTable B
        <where>
            A.tag_name = B.TagName
            AND A.main_tag = 1
            AND A.[disable] = 0
            <if test="buildingId!=null">
                AND building_id = #{buildingId,jdbcType = INTEGER}
            </if>
        </where>
    </select>

    <select id="selectHomePageChartSettingList" resultType="map">
        SELECT
            A.id,
            A.placeholder_id placeholderId,
            TagName tagName,
            CAST (TagValue AS DECIMAL (20,2)) tagValue,
            A.description
        FROM
            home_page_chart_setting A,
            RTable B
        WHERE
            A.tag_name = B.TagName
    </select>

    <select id="selectYearTotal" resultType="map">
        SELECT
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), getdate(), 120 )
        AND energy_type_name = '电' THEN
        TagValue ELSE 0.0
        END
        ) currentElectricitySumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), DATEADD( year , - 1, getdate() ),
        120 )
        AND energy_type_name = '电' THEN
        TagValue ELSE 0.0
        END
        ) preElectricitySumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), getdate(), 120 )
        AND energy_type_name = '水' THEN
        TagValue ELSE 0.0
        END
        ) currentWaterSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), DATEADD( year , - 1, getdate() ),
        120 )
        AND energy_type_name = '水' THEN
        TagValue ELSE 0.0
        END
        ) preWaterSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), getdate(), 120 )
        AND energy_type_name = '空气' THEN
        TagValue ELSE 0.0
        END
        ) currentAirSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), DATEADD( year , - 1, getdate() ),
        120 )
        AND energy_type_name = '空气' THEN
        TagValue ELSE 0.0
        END
        ) preAirSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), getdate(), 120 )
        AND energy_type_name = '蒸汽' THEN
        TagValue ELSE 0.0
        END
        ) currentSteamSumValue,
        SUM (
        CASE
        WHEN CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), DATEADD( year , - 1, getdate() ),
        120 )
        AND energy_type_name = '蒸汽' THEN
        TagValue ELSE 0.0
        END
        ) preSteamSumValue
        FROM
        consumption_group_info A
        LEFT JOIN T_YearData B ON A.tag_name = B.TagName
        and (
        CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), getdate(), 120 )
        or CONVERT ( VARCHAR ( 4 ), B.DataTime , 120 ) = CONVERT ( VARCHAR ( 4 ), DATEADD( year , - 1, getdate()
        ),120 )
        )
        WHERE
        A.[disable] = 0
    </select>

</mapper>