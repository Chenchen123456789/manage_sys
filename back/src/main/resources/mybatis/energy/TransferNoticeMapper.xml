<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eim.project.energy.mapper.TransferNoticeMapper">
    <resultMap id="BaseResultMap" type="com.eim.project.energy.entity.TransferNotice">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="building_id" jdbcType="INTEGER" property="buildingId"/>
        <result column="data_time" jdbcType="TIMESTAMP" property="dataTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_by" jdbcType="NVARCHAR" property="createBy"/>
        <result column="note" jdbcType="NVARCHAR" property="note"/>
        <result column="in_department" jdbcType="NVARCHAR" property="inDepartment"/>
        <result column="out_department" jdbcType="NVARCHAR" property="outDepartment"/>
        <result column="modify_user" jdbcType="NVARCHAR" property="modifyUser"/>
        <result column="amount" jdbcType="DOUBLE" property="amount"/>
        <result column="price" jdbcType="DOUBLE" property="price"/>
        <result column="total_price" jdbcType="DOUBLE" property="totalPrice"/>
        <result column="energy_type" jdbcType="INTEGER" property="energyType"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, building_id, data_time, create_time, create_by, note, out_department, modify_user, 
    amount, price, energy_type
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from S4_Transfer_Notice
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectTransferNoticeList" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>,
        (select distinct concat(plant_name,building_name) from Variable_Info VI where VI.building_id = B.building_id) in_department,
        CAST ((price * amount) AS DECIMAL (20,2))  total_price
        from S4_Transfer_Notice B
        <where>
            <if test="buildingId!=null">
                and B.building_id = #{ buildingId, jdbcType = INTEGER}
            </if>
            <if test="queryTime!=null">
                and CONVERT ( VARCHAR ( 7 ), data_time , 120 ) = CONVERT ( VARCHAR ( 7 ), #{queryTime}, 120 )
            </if>
        </where>
    </select>
    <delete id="deleteByBuildingIdAndDataTime">
        delete from S4_Transfer_Notice
        where building_id = #{buildingId,jdbcType=INTEGER}
        and CONVERT ( VARCHAR ( 7 ), data_time , 120 ) = CONVERT ( VARCHAR ( 7 ), #{dataTime}, 120 )
    </delete>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from S4_Transfer_Notice
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="batchInsertSelective" parameterType="com.eim.project.energy.entity.TransferNotice">
        insert into S4_Transfer_Notice ( building_id, data_time,
        create_time, create_by, note,
        out_department, modify_user, amount,
        price, energy_type)
        values
        <foreach collection="array" item="item" separator=",">
            ( #{item.buildingId,jdbcType=INTEGER}, #{item.dataTime,jdbcType=TIMESTAMP},
            #{item.createTime,jdbcType=TIMESTAMP}, #{item.createBy,jdbcType=NVARCHAR}, #{item.note,jdbcType=NVARCHAR},
            #{item.outDepartment,jdbcType=NVARCHAR}, #{item.modifyUser,jdbcType=NVARCHAR}, #{item.amount,jdbcType=DOUBLE},
            #{item.price,jdbcType=DOUBLE}, #{item.energyType,jdbcType=INTEGER})
        </foreach>
    </insert>
    <insert id="insert" parameterType="com.eim.project.energy.entity.TransferNotice">
    insert into S4_Transfer_Notice (id, building_id, data_time, 
      create_time, create_by, note,
      out_department, modify_user, amount, 
      price, energy_type)
    values (#{id,jdbcType=BIGINT}, #{buildingId,jdbcType=INTEGER}, #{dataTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=NVARCHAR}, #{note,jdbcType=NVARCHAR}, 
      #{outDepartment,jdbcType=NVARCHAR}, #{modifyUser,jdbcType=NVARCHAR}, #{amount,jdbcType=DOUBLE}, 
      #{price,jdbcType=DOUBLE}, #{energyType,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.eim.project.energy.entity.TransferNotice">
        insert into S4_Transfer_Notice
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="buildingId != null">
                building_id,
            </if>
            <if test="dataTime != null">
                data_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="note != null">
                note,
            </if>
            <if test="outDepartment != null">
                out_department,
            </if>
            <if test="modifyUser != null">
                modify_user,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="energyType != null">
                energy_type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="buildingId != null">
                #{buildingId,jdbcType=INTEGER},
            </if>
            <if test="dataTime != null">
                #{dataTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=NVARCHAR},
            </if>
            <if test="note != null">
                #{note,jdbcType=NVARCHAR},
            </if>
            <if test="outDepartment != null">
                #{outDepartment,jdbcType=NVARCHAR},
            </if>
            <if test="modifyUser != null">
                #{modifyUser,jdbcType=NVARCHAR},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DOUBLE},
            </if>
            <if test="price != null">
                #{price,jdbcType=DOUBLE},
            </if>
            <if test="energyType != null">
                #{energyType,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.eim.project.energy.entity.TransferNotice">
        update S4_Transfer_Notice
        <set>
            <if test="buildingId != null">
                building_id = #{buildingId,jdbcType=INTEGER},
            </if>
            <if test="dataTime != null">
                data_time = #{dataTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=NVARCHAR},
            </if>
            <if test="note != null">
                note = #{note,jdbcType=NVARCHAR},
            </if>
            <if test="outDepartment != null">
                out_department = #{outDepartment,jdbcType=NVARCHAR},
            </if>
            <if test="modifyUser != null">
                modify_user = #{modifyUser,jdbcType=NVARCHAR},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=DOUBLE},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DOUBLE},
            </if>
            <if test="energyType != null">
                energy_type = #{energyType,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.eim.project.energy.entity.TransferNotice">
    update S4_Transfer_Notice
    set building_id = #{buildingId,jdbcType=INTEGER},
      data_time = #{dataTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=NVARCHAR},
      note = #{note,jdbcType=NVARCHAR},
      out_department = #{outDepartment,jdbcType=NVARCHAR},
      modify_user = #{modifyUser,jdbcType=NVARCHAR},
      amount = #{amount,jdbcType=DOUBLE},
      price = #{price,jdbcType=DOUBLE},
      energy_type = #{energyType,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>